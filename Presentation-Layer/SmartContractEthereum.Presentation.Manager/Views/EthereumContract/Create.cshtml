@model SmartContractEthereum.Presentation.Manager.Models.EthereumContract.EthereumContractViewModel

@{
    ViewBag.Title = "Adicionar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Adicionar</h2>

@using (Html.BeginForm("CreateAsync", "EthereumContract", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
    <h4>Ethereum Contract</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Requester, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Requester, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Requester, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Recipient, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Recipient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Recipient, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">File</label>
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FileUpload, new { type = "file", name = "FileUpload", accept= "application/pdf,application/vnd.ms-excel" })<br /><br />
        </div>
    </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.DropDownListFor(model => model.Active, new SelectList(
                            new[]
                            {
                                new { Value = "true", Text = "Sim" },
                                new { Value = "false", Text = "Não" },
                            },
                            "Value",
                            "Text"
                        ))
                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Criar" class="btn btn-default" />
                </div>
            </div>
        </div>
        }

        <div>
            @Html.ActionLink("Voltar para Lista", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
